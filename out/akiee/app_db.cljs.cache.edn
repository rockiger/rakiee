;; Analyzed by ClojureScript 0.0-2725
{:defs {node-pos-by-key {:protocol-inline nil, :name akiee.app-db/node-pos-by-key, :variadic false, :file "src/akiee/app_db.cljs", :end-column 23, :method-params ([ky lon]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 313, :end-line 313, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ky lon])), :doc "String ListOfNode -> Integer\n  Returns the position of the first of occurence of a node with key ky in ListOfNode lon", :test true}, insert-node-helper! {:protocol-inline nil, :name akiee.app-db/insert-node-helper!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 27, :method-params ([n pro gs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 3}), :line 337, :end-line 337, :max-fixed-arity 3, :fn-var true, :arglists (quote ([n pro gs])), :doc "Node String GlobalState -> GlobalState\n  Inserts a node n at the right position in project pro and returns GlobalState gs;\n  returns a ListOfNode", :test true}, index-of-node-helper {:protocol-inline nil, :name akiee.app-db/index-of-node-helper, :variadic false, :file "src/akiee/app_db.cljs", :end-column 28, :method-params ([coll hl i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 3}), :line 282, :end-line 282, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll hl i])), :test true}, change-reps {:protocol-inline nil, :name akiee.app-db/change-reps, :variadic false, :file "src/akiee/app_db.cljs", :end-column 19, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 460, :end-line 460, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes String c with repeat information Node n;\n  changes the project in n and safes to app-state", :test true}, switch-search! {:protocol-inline nil, :name akiee.app-db/switch-search!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 210, :end-line 210, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> GlobalState\n  switches the search? state and the new app-state", :test true}, switch-doing! {:protocol-inline nil, :name akiee.app-db/switch-doing!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 248, :end-line 248, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> GlobalState\n  switches the ls variable to DOING and editor? search? search? accordingly", :test true}, positions {:protocol-inline nil, :name akiee.app-db/positions, :variadic false, :file "src/akiee/app_db.cljs", :end-column 17, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 304, :end-line 304, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :doc "Function Collection -> Integer\n  Return the positions in positions of elements in coll that match the predicate pred ", :test true}, switch-todo! {:protocol-inline nil, :name akiee.app-db/switch-todo!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 242, :end-line 242, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> GlobalState\n  switches the ls variable to TODO and editor? search? search? accordingly", :test true}, change-headline {:protocol-inline nil, :name akiee.app-db/change-headline, :variadic false, :file "src/akiee/app_db.cljs", :end-column 23, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 408, :end-line 408, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes content String c and Node n;\n  changes the headline in n and safes to app-state", :test true}, switch-all! {:protocol-inline nil, :name akiee.app-db/switch-all!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 260, :end-line 260, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> GlobalState\n  switches the ls variable to ALL and editor? search? search? accordingly", :test true}, sidebar-content {:protocol-inline nil, :name akiee.app-db/sidebar-content, :variadic false, :file "src/akiee/app_db.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 0}), :line 392, :end-line 392, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> node", :test true}, tasks-helper {:protocol-inline nil, :name akiee.app-db/tasks-helper, :variadic false, :file "src/akiee/app_db.cljs", :end-column 20, :method-params ([gs ls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{clj any}, :variadic false, :max-fixed-arity 2}), :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gs ls])), :doc "GlobalState ListState -> lon\n  consumes an GlobalState gs , a ListState ls and  returns the tasks, according to the current ListState", :test true}, set-selected! {:protocol-inline nil, :name akiee.app-db/set-selected!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 21, :method-params ([ky]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ky])), :doc "String -> GlobalState\n  consumes a String ky and changes the :selected GlobalState accordingly;\n  returns the new GlobalState", :test true}, node-by-key {:protocol-inline nil, :name akiee.app-db/node-by-key, :variadic false, :file "src/akiee/app_db.cljs", :end-column 19, :method-params ([ky]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 386, :end-line 386, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ky])), :doc "String -> Node\n  Consumes a key and returns the node from the app-state", :test true}, change-state {:protocol-inline nil, :name akiee.app-db/change-state, :variadic false, :file "src/akiee/app_db.cljs", :end-column 20, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 422, :end-line 422, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes content String c and Node n;\n  changes the state in n and safes to app-state", :test true}, projects {:protocol-inline nil, :name akiee.app-db/projects, :variadic false, :file "src/akiee/app_db.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{clj any}, :variadic false, :max-fixed-arity 0}), :line 160, :end-line 160, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> ListOfString\n  returns a List of Strings with the projects in the app-state", :test true}, load-app-state {:protocol-inline nil, :name akiee.app-db/load-app-state, :variadic false, :file "src/akiee/app_db.cljs", :end-column 22, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag akiee.datadefinitions/global-state, :variadic false, :max-fixed-arity 1}), :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "String -> GS\n  consumes the path p to the task file and produces the initial app-state\n  TODO find way to test, without :key", :test true}, next-ts! {:protocol-inline nil, :name akiee.app-db/next-ts!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 16, :method-params ([ky]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 363, :end-line 363, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ky])), :doc "String -> GlobalState\n  Consumes a key ky and changes the task-state of that task in :lon;\n  returns the app-state", :test true}, test-state {:file "src/akiee/app_db.cljs", :line 45, :column 1, :end-line 45, :end-column 17, :test true, :name akiee.app-db/test-state}, selected {:protocol-inline nil, :name akiee.app-db/selected, :variadic false, :file "src/akiee/app_db.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 83, :end-line 83, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> String\n  returns the state of the selected filed", :test true}, set-changed! {:protocol-inline nil, :name akiee.app-db/set-changed!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 20, :method-params ([b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([b])), :doc "Bool -> GlobalState\n  consumes the Bool b switches the changed? variable and return the new app-state", :test true}, change-sidebar-element {:protocol-inline nil, :name akiee.app-db/change-sidebar-element, :variadic false, :file "src/akiee/app_db.cljs", :end-column 30, :method-params ([c n ky]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 3}), :line 398, :end-line 398, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c n ky])), :doc "String Node Keyword -> GlobalState\n  consumes content String c, Node n and Keyword ky;\n  changes the content c for keywerd ky in n and safes to app-state", :test true}, insert-node! {:protocol-inline nil, :name akiee.app-db/insert-node!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 20, :method-params ([n pro]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 349, :end-line 349, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n pro])), :doc "Node String GlobalState -> ListOfNode\n  Inserts a node n at the right position in project pro and returns a ListOfNode", :test true}, editable {:protocol-inline nil, :name akiee.app-db/editable, :variadic false, :file "src/akiee/app_db.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 89, :end-line 89, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> String\n  returns the state of the editable filed", :test true}, set-editable! {:protocol-inline nil, :name akiee.app-db/set-editable!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 21, :method-params ([attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attr])), :doc "String -> GlobalState\n  consumes a String ky and changes the :selected GlobalState accordingly;\n  retruns the new GlobalState", :test true}, index-of-node {:protocol-inline nil, :name akiee.app-db/index-of-node, :variadic false, :file "src/akiee/app_db.cljs", :end-column 21, :method-params ([coll hl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 287, :end-line 287, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll hl])), :doc "Collection String -> Integer\n  Consumes a Collection coll and a healine hl;\n  produces the position of the element with the headline hl and level 1", :test true}, editor? {:protocol-inline nil, :name akiee.app-db/editor?, :variadic false, :file "src/akiee/app_db.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Boolean\n  returns the state of the editor", :test true}, set-search-string! {:protocol-inline nil, :name akiee.app-db/set-search-string!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "String -> GlobalState\n  consumes a String s and changes the search-string of the app-state accordingly;\n  returns the new GlobalState", :test true}, switch-entry! {:protocol-inline nil, :name akiee.app-db/switch-entry!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 224, :end-line 224, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> GlobalState\n  switches the search? state and the new app-state", :test true}, switch-done! {:protocol-inline nil, :name akiee.app-db/switch-done!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 254, :end-line 254, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> GlobalState\n  switches the ls variable to DONE and editor? search? search? accordingly", :test true}, switch-list-state! {:protocol-inline nil, :name akiee.app-db/switch-list-state!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 26, :method-params ([ls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 235, :end-line 235, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ls])), :doc "ListState -> GlobalState\n  Consumes a Liststate ls switches the ls variable and editor? search? search? accordingly", :test true}, search? {:protocol-inline nil, :name akiee.app-db/search?, :variadic false, :file "src/akiee/app_db.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Boolean\n  returns the state of the search box", :test true}, node-by-pos {:protocol-inline nil, :name akiee.app-db/node-by-pos, :variadic false, :file "src/akiee/app_db.cljs", :end-column 19, :method-params ([pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 380, :end-line 380, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pos])), :doc "Integer -> Node\n  Returns node at pos", :test true}, change-scheduled {:protocol-inline nil, :name akiee.app-db/change-scheduled, :variadic false, :file "src/akiee/app_db.cljs", :end-column 24, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 436, :end-line 436, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes content String c and Node n;\n  changes the project in n and safes to app-state", :test true}, tasks {:protocol-inline nil, :name akiee.app-db/tasks, :variadic false, :file "src/akiee/app_db.cljs", :end-column 13, :method-params ([] [ls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{clj cljs.core/IVector any}, :variadic false, :max-fixed-arity 0} {:tag #{clj cljs.core/IVector any}, :variadic false, :max-fixed-arity 1}), :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([] [ls])), :doc "-> ListOfNode\n  shows the tasks of the app-state, according to the current ListState\n  ---------------------------------------------------------------------------\n  ListState -> ListOfNode\n  consumes a ListState ls, shows the tasks of the app-state, according to ls", :test true}, node-pos-by-headline {:protocol-inline nil, :name akiee.app-db/node-pos-by-headline, :variadic false, :file "src/akiee/app_db.cljs", :end-column 28, :method-params ([hdln lon]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 325, :end-line 325, :max-fixed-arity 2, :fn-var true, :arglists (quote ([hdln lon])), :doc "String ListOfNode -> Integer\n  Returns the position of the first of occurence of a node with key ky in ListOfNode lon", :test true}, reset-lon! {:protocol-inline nil, :name akiee.app-db/reset-lon!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 18, :method-params ([gs lon]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 298, :end-line 298, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gs lon])), :doc "Global-State ListOfNode -> GlobalState\n  Resets the ListOfNode lon in the app-state; produces a new GlobalState", :test true}, ->rank-helper {:protocol-inline nil, :name akiee.app-db/->rank-helper, :variadic false, :file "src/akiee/app_db.cljs", :end-column 21, :method-params ([gs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 266, :end-line 266, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gs])), :doc "GlobalState -> Int\n  produces a new rank based on the tasks in the GlobalState gs", :test true}, FP {:file "src/akiee/app_db.cljs", :line 21, :column 1, :end-line 21, :end-column 9, :test true, :name akiee.app-db/FP}, app-state {:file "src/akiee/app_db.cljs", :line 44, :column 1, :end-line 44, :end-column 16, :test true, :name akiee.app-db/app-state}, change-project {:protocol-inline nil, :name akiee.app-db/change-project, :variadic false, :file "src/akiee/app_db.cljs", :end-column 22, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 429, :end-line 429, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes content String c and Node n;\n  changes the project in n and safes to app-state", :test true}, ->rank {:protocol-inline nil, :name akiee.app-db/->rank, :variadic false, :file "src/akiee/app_db.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 0}), :line 275, :end-line 275, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Int\n  produces a new rank based on the app-state", :test true}, list-state {:protocol-inline nil, :name akiee.app-db/list-state, :variadic false, :file "src/akiee/app_db.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> ListStat\n  returns the state of the List", :test true}, nodes {:protocol-inline nil, :name akiee.app-db/nodes, :variadic false, :file "src/akiee/app_db.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> ListOfNode\n  returns the nodes of the app-state", :test true}, null {:file "src/akiee/app_db.cljs", :line 20, :column 1, :end-line 20, :end-column 11, :test true, :name akiee.app-db/null}, switch-editor! {:protocol-inline nil, :name akiee.app-db/switch-editor!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 196, :end-line 196, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Boolean\n  switches the editor? state and returns it", :test true}, change-deadline {:protocol-inline nil, :name akiee.app-db/change-deadline, :variadic false, :file "src/akiee/app_db.cljs", :end-column 23, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 444, :end-line 444, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes content String c and Node n;\n  changes the project in n and safes to app-state", :test true}, change-body {:protocol-inline nil, :name akiee.app-db/change-body, :variadic false, :file "src/akiee/app_db.cljs", :end-column 19, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 415, :end-line 415, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes content String c and Node n;\n  changes the body in n and safes to app-state", :test true}, entry? {:protocol-inline nil, :name akiee.app-db/entry?, :variadic false, :file "src/akiee/app_db.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Boolean\n  returns the state of the task entry", :test true}, changed? {:protocol-inline nil, :name akiee.app-db/changed?, :variadic false, :file "src/akiee/app_db.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 72, :end-line 72, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Boolean", :test true}, change-tags {:protocol-inline nil, :name akiee.app-db/change-tags, :variadic false, :file "src/akiee/app_db.cljs", :end-column 19, :method-params ([c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 452, :end-line 452, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c n])), :doc "String Node -> GlobalState\n  consumes content commma seperated String c and Node n;\n  changes the project in n and safes to app-state", :test true}, add-task! {:protocol-inline nil, :name akiee.app-db/add-task!, :variadic false, :file "src/akiee/app_db.cljs", :end-column 17, :method-params ([ts hl pro]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 3}), :line 355, :end-line 355, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ts hl pro])), :doc "TaskState String String -> GlobalState\n  Consumes a TaskState ts a headline hl and a project pro;\n  adds a task to the app-state", :test true}}, :name akiee.app-db, :doc nil, :excludes #{}, :use-macros {is cljs.test, deftest cljs.test}, :require-macros {cljs.test cljs.test}, :uses {DOING akiee.constants, DONE akiee.constants, trim clojure.string, global-state akiee.datadefinitions, TODO akiee.constants, ALL akiee.constants}, :requires {akiee.datadefinitions akiee.datadefinitions, akiee.dom-helpers akiee.dom-helpers, dom akiee.dom-helpers, no akiee.node, nj cljs.nodejs, akiee.node akiee.node, reagent.core reagent.core, fo akiee.fileoperations, akiee.fileoperations akiee.fileoperations, dd akiee.datadefinitions, rc reagent.core, cljs.test cljs.test, akiee.constants akiee.constants, cljs.nodejs cljs.nodejs, s clojure.string, clojure.string clojure.string}, :imports nil}