;; Analyzed by ClojureScript 0.0-2725
{:defs {task-file-path {:protocol-inline nil, :name akiee.fileoperations/task-file-path, :variadic false, :file "src/akiee/fileoperations.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "nil -> String\n  produce the path of the task file", :test true}, fs {:file "src/akiee/fileoperations.cljs", :line 6, :column 1, :end-line 6, :end-column 9, :test true, :name akiee.fileoperations/fs}, dirname {:file "src/akiee/fileoperations.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :test true, :name akiee.fileoperations/dirname}, path {:file "src/akiee/fileoperations.cljs", :line 7, :column 1, :end-line 7, :end-column 11, :test true, :name akiee.fileoperations/path}, create-task-list-file {:protocol-inline nil, :name akiee.fileoperations/create-task-list-file, :variadic false, :file "src/akiee/fileoperations.cljs", :end-column 29, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h])), :doc "String -> String\n  consumes the home directory of the user and return the file path of task list,\n  if file is not present, it get's created", :test true}, testfile {:file "src/akiee/fileoperations.cljs", :line 20, :column 1, :end-line 20, :end-column 15, :test true, :name akiee.fileoperations/testfile}, save-task-file {:protocol-inline nil, :name akiee.fileoperations/save-task-file, :variadic false, :file "src/akiee/fileoperations.cljs", :end-column 22, :method-params ([c p changed? chfn!]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 4}), :line 77, :end-line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([c p changed? chfn!])), :test true}, process {:file "src/akiee/fileoperations.cljs", :line 8, :column 1, :end-line 8, :end-column 14, :test true, :name akiee.fileoperations/process}, load-task-file {:protocol-inline nil, :name akiee.fileoperations/load-task-file, :variadic false, :file "src/akiee/fileoperations.cljs", :end-column 22, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil string}, :variadic false, :max-fixed-arity 1}), :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "String -> String\n  consumes the path p for a file and returns the content of the file", :test true}, user-home {:protocol-inline nil, :name akiee.fileoperations/user-home, :variadic false, :file "src/akiee/fileoperations.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 0}), :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "nil -> String\n  produce the home directory of the user according to plattform", :test true}, filename {:file "src/akiee/fileoperations.cljs", :line 19, :column 1, :end-line 19, :end-column 15, :test true, :name akiee.fileoperations/filename}, org {:file "src/akiee/fileoperations.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :test true, :name akiee.fileoperations/org}}, :name akiee.fileoperations, :doc nil, :excludes #{}, :use-macros {is cljs.test, deftest cljs.test}, :require-macros {cljs.test cljs.test}, :uses nil, :requires {nj cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.test cljs.test}, :imports nil}