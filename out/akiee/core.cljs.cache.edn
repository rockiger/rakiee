;; Analyzed by ClojureScript 0.0-2725
{:defs {task-table {:protocol-inline nil, :name akiee.core/task-table, :variadic false, :file "src/akiee/core.cljs", :end-column 18, :method-params ([tb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tb])), :test true}, enter-task-project {:protocol-inline nil, :name akiee.core/enter-task-project, :variadic false, :file "src/akiee/core.cljs", :end-column 26, :method-params ([los]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([los])), :doc "ListofString -> Component\n  Consumes a list of string los; produces the component for the project select.", :test true}, select {:protocol-inline nil, :name akiee.core/select, :variadic false, :file "src/akiee/core.cljs", :end-column 14, :method-params ([loa n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loa n])), :doc "ListOf* String -> Component\n  Consumes a list of anything loa and a name; produces the component of a select field.", :test true}, entry-close {:file "src/akiee/core.cljs", :line 64, :column 1, :end-line 64, :end-column 18, :test true, :name akiee.core/entry-close}, list-state-button {:protocol-inline nil, :name akiee.core/list-state-button, :variadic false, :file "src/akiee/core.cljs", :end-column 25, :method-params ([tx id t state tfn onfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 6}), :line 30, :end-line 30, :max-fixed-arity 6, :fn-var true, :arglists (quote ([tx id t state tfn onfn])), :doc "String String String -> Component\n  Consumes the text tx, the id and the title t, the state,\n  the test function tfn, the on-click function onfn of the button;\n  produces the component for the button.", :test true}, search-switch {:file "src/akiee/core.cljs", :line 62, :column 1, :end-line 62, :end-column 20, :test true, :name akiee.core/search-switch}, enter-task {:protocol-inline nil, :name akiee.core/enter-task, :variadic false, :file "src/akiee/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 106, :end-line 106, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Component\n  The entry form for entering tasks", :test true}, modifier {:file "src/akiee/core.cljs", :line 19, :column 1, :end-line 19, :end-column 15, :test true, :name akiee.core/modifier}, task {:protocol-inline nil, :name akiee.core/task, :variadic false, :file "src/akiee/core.cljs", :end-column 12, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :test true}, entry-switch {:file "src/akiee/core.cljs", :line 63, :column 1, :end-line 63, :end-column 19, :test true, :name akiee.core/entry-switch}, task-list {:protocol-inline nil, :name akiee.core/task-list, :variadic false, :file "src/akiee/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 159, :end-line 159, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, switch-button {:protocol-inline nil, :name akiee.core/switch-button, :variadic false, :file "src/akiee/core.cljs", :end-column 21, :method-params ([in id t tfn? onfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 5}), :line 50, :end-line 50, :max-fixed-arity 5, :fn-var true, :arglists (quote ([in id t tfn? onfn])), :doc "String String String -> Component\n  Consumes the icon name in, the id and title t of the button, the test function tfn?,\n  the on-click function onfn of the button.\n  produces the component for the button.", :test true}, search {:protocol-inline nil, :name akiee.core/search, :variadic false, :file "src/akiee/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 123, :end-line 123, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Component\n  The entry form for searching tasks", :test true}, enter-task-status {:protocol-inline nil, :name akiee.core/enter-task-status, :variadic false, :file "src/akiee/core.cljs", :end-column 25, :method-params ([lot]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lot])), :doc "ListOfTaskState -> Component\n  Consumes the a list of taskstate lot;\n  produces the component of the select field for the state of the new task.", :test true}, doing-button {:file "src/akiee/core.cljs", :line 43, :column 1, :end-line 43, :end-column 19, :test true, :name akiee.core/doing-button}, editor-switch {:file "src/akiee/core.cljs", :line 61, :column 1, :end-line 61, :end-column 20, :test true, :name akiee.core/editor-switch}, done-button {:file "src/akiee/core.cljs", :line 45, :column 1, :end-line 45, :end-column 18, :test true, :name akiee.core/done-button}, board-button {:file "src/akiee/core.cljs", :line 47, :column 1, :end-line 47, :end-column 19, :test true, :name akiee.core/board-button}, big-bang {:protocol-inline nil, :name akiee.core/big-bang, :variadic false, :file "src/akiee/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 184, :end-line 184, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, app {:protocol-inline nil, :name akiee.core/app, :variadic false, :file "src/akiee/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 173, :end-line 173, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc " -> Component\n  Produces the base comment", :test true}, editor {:protocol-inline nil, :name akiee.core/editor, :variadic false, :file "src/akiee/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 133, :end-line 133, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Component\n  The textarea to directly edit the task list in markdown", :test true}, todo-button {:file "src/akiee/core.cljs", :line 41, :column 1, :end-line 41, :end-column 18, :test true, :name akiee.core/todo-button}, toolbar {:protocol-inline nil, :name akiee.core/toolbar, :variadic false, :file "src/akiee/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "-> Component\n  The toolbar for changing the state of the Akiee", :test true}}, :name akiee.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {DOING akiee.constants, DONE akiee.constants, TODO akiee.constants, ALL akiee.constants}, :requires {akiee.app-db akiee.app-db, akiee.sidebar akiee.sidebar, akiee.node akiee.node, reagent.core reagent.core, clojure.browser.repl clojure.browser.repl, r reagent.core, nd akiee.node, db akiee.app-db, akiee.constants akiee.constants, akiee.handlers akiee.handlers, string clojure.string, sb akiee.sidebar, c akiee.constants, h akiee.handlers, clojure.string clojure.string, repl clojure.browser.repl}, :imports nil}