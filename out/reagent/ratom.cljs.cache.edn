;; Analyzed by ClojureScript 0.0-2725
{:defs {->RCursor {:protocol-inline nil, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->RCursor, :variadic false, :file "out/reagent/ratom.cljs", :end-column 18, :method-params ([path ratom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:tag reagent.ratom/RCursor, :variadic false, :max-fixed-arity 2}), :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path ratom])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, notify-deref-watcher! {:protocol-inline nil, :private true, :name reagent.ratom/notify-deref-watcher!, :variadic false, :file "out/reagent/ratom.cljs", :end-column 30, :method-params ([derefable]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj-nil}, :variadic false, :max-fixed-arity 1}), :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([derefable])), :test true}, IComputedImpl {:protocol-symbol true, :name reagent.ratom/IComputedImpl, :file "out/reagent/ratom.cljs", :end-column 28, :column 1, :line 151, :protocol-info {:methods {-update-watching [[this derefed]], -handle-change [[k sender oldval newval]]}}, :info nil, :end-line 151, :impls #{reagent.ratom/Reaction}, :test true}, capture-derefed {:protocol-inline nil, :name reagent.ratom/capture-derefed, :variadic false, :file "out/reagent/ratom.cljs", :end-column 23, :method-params ([f obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f obj])), :test true}, RAtom {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/RAtom, :file "out/reagent/ratom.cljs", :end-column 16, :type true, :column 10, :line 31, :record false, :end-line 31, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, atom {:protocol-inline nil, :name reagent.ratom/atom, :variadic true, :file "out/reagent/ratom.cljs", :end-column 12, :method-params ([x] [x p__11745]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag reagent.ratom/RAtom, :variadic false, :max-fixed-arity 1} {:tag reagent.ratom/RAtom, :variadic true, :max-fixed-arity 1}), :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x] [x & {:keys [meta validator]}])), :doc "Like clojure.core/atom, except that it keeps track of derefs.", :test true}, ->Reaction {:protocol-inline nil, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Reaction, :variadic false, :file "out/reagent/ratom.cljs", :end-column 19, :method-params ([f state dirty? active? watching watches auto-run on-set on-dispose]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:tag reagent.ratom/Reaction, :variadic false, :max-fixed-arity 9}), :line 161, :end-line 161, :max-fixed-arity 9, :fn-var true, :arglists (quote ([f state dirty? active? watching watches auto-run on-set on-dispose])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, dispose! {:protocol-inline nil, :protocol reagent.ratom/IDisposable, :name reagent.ratom/dispose!, :variadic false, :file "out/reagent/ratom.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 145, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, -update-watching {:protocol-inline nil, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-update-watching, :variadic false, :file "out/reagent/ratom.cljs", :end-column 21, :method-params ([this derefed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 151, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this derefed])), :test true}, run {:protocol-inline nil, :protocol reagent.ratom/IRunnable, :name reagent.ratom/run, :variadic false, :file "out/reagent/ratom.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 148, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, IDisposable {:protocol-symbol true, :name reagent.ratom/IDisposable, :file "out/reagent/ratom.cljs", :end-column 26, :column 1, :line 145, :protocol-info {:methods {dispose! [[this]]}}, :info nil, :end-line 145, :impls #{reagent.ratom/Reaction}, :test true}, captured {:protocol-inline nil, :name reagent.ratom/captured, :variadic false, :file "out/reagent/ratom.cljs", :end-column 16, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :test true}, make-reaction {:protocol-inline nil, :name reagent.ratom/make-reaction, :variadic true, :file "out/reagent/ratom.cljs", :end-column 21, :method-params ([f p__11835]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag reagent.ratom/Reaction, :variadic true, :max-fixed-arity 1}), :line 264, :end-line 264, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f & {:keys [auto-run on-set on-dispose derefed]}])), :test true}, Reaction {:num-fields 9, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Reaction, :file "out/reagent/ratom.cljs", :end-column 19, :type true, :column 10, :line 161, :record false, :end-line 161, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, RCursor {:num-fields 2, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/RCursor, :file "out/reagent/ratom.cljs", :end-column 18, :type true, :column 10, :line 90, :record false, :end-line 90, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, -handle-change {:protocol-inline nil, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-handle-change, :variadic false, :file "out/reagent/ratom.cljs", :end-column 19, :method-params ([k sender oldval newval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 151, :end-line 153, :max-fixed-arity 4, :fn-var true, :arglists (quote ([k sender oldval newval])), :test true}, debug {:file "out/reagent/ratom.cljs", :line 7, :column 1, :end-line 7, :end-column 12, :test true, :name reagent.ratom/debug}, -running {:file "out/reagent/ratom.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :test true, :name reagent.ratom/-running}, cursor {:protocol-inline nil, :name reagent.ratom/cursor, :variadic false, :file "out/reagent/ratom.cljs", :end-column 14, :method-params ([path ra]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag reagent.ratom/RCursor, :variadic false, :max-fixed-arity 2}), :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path ra])), :test true}, running {:protocol-inline nil, :name reagent.ratom/running, :variadic false, :file "out/reagent/ratom.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, IRunnable {:protocol-symbol true, :name reagent.ratom/IRunnable, :file "out/reagent/ratom.cljs", :end-column 24, :column 1, :line 148, :protocol-info {:methods {run [[this]]}}, :info nil, :end-line 148, :impls #{reagent.ratom/Reaction}, :test true}, *ratom-context* {:file "out/reagent/ratom.cljs", :line 5, :column 1, :end-line 5, :end-column 36, :dynamic true, :declared true, :test true, :name reagent.ratom/*ratom-context*}, call-watches {:protocol-inline nil, :private true, :name reagent.ratom/call-watches, :variadic false, :file "out/reagent/ratom.cljs", :end-column 21, :method-params ([obs watches oldval newval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 4}), :line 155, :end-line 155, :max-fixed-arity 4, :fn-var true, :arglists (quote ([obs watches oldval newval])), :test true}, ->RAtom {:protocol-inline nil, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->RAtom, :variadic false, :file "out/reagent/ratom.cljs", :end-column 16, :method-params ([state meta validator watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:tag reagent.ratom/RAtom, :variadic false, :max-fixed-arity 4}), :line 31, :end-line 31, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state meta validator watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}}, :name reagent.ratom, :doc nil, :excludes #{atom}, :use-macros {dbg reagent.debug}, :require-macros {reagent.debug reagent.debug}, :uses nil, :requires nil, :imports nil}