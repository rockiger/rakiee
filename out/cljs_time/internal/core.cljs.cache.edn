;; Analyzed by ClojureScript 0.0-2725
{:defs {multiplied-by {:protocol-inline nil, :name cljs-time.internal.core/multiplied-by, :variadic false, :file "out/cljs_time/internal/core.cljs", :end-column 21, :method-params ([period scalar]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([period scalar])), :test true}, zero-pad {:protocol-inline nil, :name cljs-time.internal.core/zero-pad, :variadic false, :file "out/cljs_time/internal/core.cljs", :end-column 16, :method-params ([n] [n zeros]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 1} {:variadic false, :max-fixed-arity 2}), :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n] [n zeros])), :doc "Remove the need to pull in gstring/format code in advanced compilation", :test true}, format {:protocol-inline nil, :name cljs-time.internal.core/format, :variadic true, :file "out/cljs_time/internal/core.cljs", :end-column 14, :method-params ([fmt args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 1}), :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fmt & args])), :doc "Formats a string using goog.string.format.", :test true}, index-of {:protocol-inline nil, :name cljs-time.internal.core/index-of, :variadic false, :file "out/cljs_time/internal/core.cljs", :end-column 16, :method-params ([coll x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll x])), :test true}, valid-date? {:protocol-inline nil, :name cljs-time.internal.core/valid-date?, :variadic false, :file "out/cljs_time/internal/core.cljs", :end-column 19, :method-params ([p__6317]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [years months days hours minutes seconds millis], :as d}])), :test true}, year-corrected-dim {:protocol-inline nil, :name cljs-time.internal.core/year-corrected-dim, :variadic false, :file "out/cljs_time/internal/core.cljs", :end-column 26, :method-params ([year month]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any number}, :variadic false, :max-fixed-arity 2}), :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([year month])), :test true}, days-in-month {:file "out/cljs_time/internal/core.cljs", :line 19, :column 1, :end-line 19, :end-column 20, :test true, :name cljs-time.internal.core/days-in-month}, leap-year? {:protocol-inline nil, :name cljs-time.internal.core/leap-year?, :variadic false, :file "out/cljs_time/internal/core.cljs", :end-column 18, :method-params ([y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([y])), :test true}, = {:protocol-inline nil, :name cljs-time.internal.core/=, :variadic true, :file "out/cljs_time/internal/core.cljs", :end-column 9, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic true, :max-fixed-arity 0}), :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& args])), :test true}}, :name cljs-time.internal.core, :doc nil, :excludes #{=}, :use-macros nil, :require-macros nil, :uses nil, :requires {goog.string.format goog.string.format, gstring goog.string, goog.string goog.string, clojure.string clojure.string, string clojure.string}, :imports nil}